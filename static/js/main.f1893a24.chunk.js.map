{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["DefaultLoading","className","styles","React","DefaultError","RepoCard","user","repo","showFullTitle","Loading","Error","loading","setLoading","data","setData","error","setError","fetch","res","target","href","style","fontSize","backgroundColor","colors","repoDetails","detail","repoName","CodeComponent","code","theme","language","defaultProps","tokens","getLineProps","getTokenProps","padding","fontFamily","map","line","i","key","token","App","display","justifyContent","alignItems","boxSizing","flexWrap","width","vsDark","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1893a24.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport colors from \"./github-utils/colors.json\";\nimport { ReactComponent as RepoIcon } from \"./github-utils/repo.svg\";\nimport { ReactComponent as StarIcon } from \"./github-utils/star.svg\";\nimport { ReactComponent as ForkIcon } from \"./github-utils/fork.svg\";\n\nexport default ({\n  repoDetails,\n  Loading = DefaultLoading,\n  Error = DefaultError,\n}) => {\n  return (\n    <div className={styles[\"row\"]}>\n      {repoDetails.map((detail) => {\n        const { user, repoName, showFullTitle } = detail;\n\n        return (\n          <div\n            className={[\n              styles[\"padding-left\"],\n              styles[\"padding-right\"],\n              styles[\"col-12\"],\n              styles[\"col-md-6\"],\n              styles[\"col-lg-6\"],\n              styles[\"mb-3\"],\n            ].join(\" \")}\n          >\n            <RepoCard\n              user={user}\n              repo={repoName}\n              showFullTitle={showFullTitle}\n              Loading={Loading}\n              Error={Error}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst DefaultLoading = () => {\n  return (\n    <div className={[styles[\"main-content\"], styles[\"loading\"]].join(\" \")}>\n      <h2>Loading...</h2>\n    </div>\n  );\n};\n\nconst DefaultError = () => {\n  return (\n    <div className={[styles[\"main-content\"], styles[\"error\"]].join(\" \")}>\n      <h2>Error Occured!</h2>\n    </div>\n  );\n};\n\nconst RepoCard = ({ user, repo, showFullTitle, Loading, Error }) => {\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  React.useEffect(() => {\n    fetch(`https://api.github.com/repos/${user}/${repo}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err);\n        setLoading(false);\n      });\n  }, []);\n\n  return loading ? (\n    <Loading />\n  ) : error ? (\n    <Error />\n  ) : (\n    <div className={styles[\"main-content\"]}>\n      <div>\n        <RepoIcon className={[styles[\"svg\"], styles[\"mr-2\"]].join(\" \")} />\n        <a\n          className={styles[\"repo-header\"]}\n          target=\"blank\"\n          href={`https://github.com/${user}/${repo}`}\n        >\n          {showFullTitle ? `${user}/${repo}` : repo}\n        </a>\n      </div>\n      <p className={[styles[\"mt-2\"], styles[\"mb-3\"]].join(\" \")}>\n        {data.description}\n      </p>\n      <p style={{ fontSize: \"12px\" }}>\n        <span className={styles[\"mr-3\"]}>\n          <span\n            className={styles[\"lang-color\"]}\n            style={{ backgroundColor: colors[data.language] }}\n          ></span>{\" \"}\n          {data.language}\n        </span>\n        {data.stargazers_count > 0 ? (\n          <a\n            className={styles[\"github-icon\"]}\n            target=\"blank\"\n            href={`https://github.com/${user}/${repo}/stargazers`}\n          >\n            <StarIcon className={styles[\"svg\"]} /> {data.stargazers_count}\n          </a>\n        ) : null}\n        {data.forks_count > 0 ? (\n          <a\n            className={[\n              styles[\"github-icon\"],\n              data.stargazers_count > 0 ? styles[\"ml-3\"] : \"\",\n            ].join(\" \")}\n            target=\"blank\"\n            href={`https://github.com/${user}/${repo}/network`}\n          >\n            <ForkIcon className={styles[\"svg\"]} /> {data.forks_count}\n          </a>\n        ) : null}\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport RepoCards from \"react-gh-repo-cards\";\nimport \"react-gh-repo-cards/dist/index.css\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport vsDark from \"prism-react-renderer/themes/vsDark\";\n\nconst CodeComponent = ({ code, theme, language }) => {\n  return (\n    <Highlight {...defaultProps} theme={theme} code={code} language={language}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={className}\n          style={{\n            ...style,\n            fontSize: \"19px\",\n            padding: \"0.7rem\",\n            fontFamily: \"'Fira Code', monospace\",\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n\nconst App = () => {\n  const code = `import RepoCards from \"react-gh-repo-cards\";\nimport \"react-gh-repo-cards/dist/index.css\";\n\nconst Cards = () => {\n  return (\n    <RepoCards\n      repoDetails={[\n        {\n          user: \"FdelMazo\",\n          repoName: \"yamerecibi\",\n          showFullTitle: true,\n        },\n        {\n          user: \"CITIZENDOT\",\n          repoName: \"gh-info\",\n          showFullTitle: true,\n        },\n        {\n          user: \"CITIZENDOT\",\n          repoName: \"TestCode\",\n          showFullTitle: false\n        },\n        {\n          user: \"CITIZENDOT\",\n          repoName: \"VCPicker\",\n          showFullTitle: false,\n        },\n      ]}\n    />\n  );\n};\n\nexport default Cards;`;\n\n  const installation = `npm install react-gh-repo-cards # npm\nyarn add react-gh-repo-cards # yarn`;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"16px\",\n        boxSizing: \"border-box\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <h1 className=\"text-center\">\n        react-gh-repo-cards{\" \"}\n        <sub>\n          <small>Demo</small>\n        </sub>\n      </h1>\n      <RepoCards\n        repoDetails={[\n          {\n            user: \"FdelMazo\",\n            repoName: \"yamerecibi\",\n            showFullTitle: true,\n          },\n          {\n            user: \"CITIZENDOT\",\n            repoName: \"gh-info\",\n            showFullTitle: true,\n          },\n          {\n            user: \"CITIZENDOT\",\n            repoName: \"TestCode\",\n            showFullTitle: false\n          },\n          {\n            user: \"CITIZENDOT\",\n            repoName: \"VCPicker\",\n            showFullTitle: false,\n          },\n        ]}\n      />\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n          boxSizing: \"border-box\",\n        }}\n      >\n        <h2 className=\"text-center\">Usage</h2>\n        <CodeComponent code={code} theme={vsDark} language=\"jsx\" />\n      </div>\n      <div>\n        <h2 className=\"text-center\">Installation</h2>\n        <CodeComponent code={installation} theme={vsDark} language=\"bash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}