{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["DefaultLoading","className","styles","React","DefaultError","RepoCard","Error","fetch","user","res","setData","setLoading","err","setError","loading","error","target","href","repo","data","style","fontSize","backgroundColor","colors","Loading","repos","CodeComponent","code","theme","language","defaultProps","tokens","getLineProps","getTokenProps","padding","fontFamily","map","line","i","key","token","App","display","justifyContent","alignItems","boxSizing","flexWrap","width","vsDark","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85244c8d.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport colors from \"./github-utils/colors.json\";\nimport { ReactComponent as RepoIcon } from \"./github-utils/repo.svg\";\nimport { ReactComponent as StarIcon } from \"./github-utils/star.svg\";\nimport { ReactComponent as ForkIcon } from \"./github-utils/fork.svg\";\n\nexport default ({\n  user,\n  repos,\n  Loading = DefaultLoading,\n  Error = DefaultError,\n}) => {\n  return (\n    <div className={styles[\"row\"]}>\n      {repos.map((repo) => (\n        <div\n          className={[\n            styles[\"padding-left\"],\n            styles[\"padding-right\"],\n            styles[\"col-12\"],\n            styles[\"col-md-6\"],\n            styles[\"col-lg-6\"],\n            styles[\"mb-3\"],\n          ].join(\" \")}\n        >\n          <RepoCard user={user} repo={repo} Loading={Loading} Error={Error} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst DefaultLoading = () => {\n  return (\n    <div className={[styles[\"main-content\"], styles[\"loading\"]].join(\" \")}>\n      <h2>Loading...</h2>\n    </div>\n  );\n};\n\nconst DefaultError = () => {\n  return (\n    <div className={[styles[\"main-content\"], styles[\"error\"]].join(\" \")}>\n      <h2>Error Occured!</h2>\n    </div>\n  );\n};\n\nconst RepoCard = ({ user, repo, Loading, Error }) => {\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  React.useEffect(() => {\n    fetch(`https://api.github.com/repos/${user}/${repo}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err);\n        setLoading(false);\n      });\n  }, []);\n\n  return loading ? (\n    <Loading />\n  ) : error ? (\n    <Error />\n  ) : (\n    <div className={styles[\"main-content\"]}>\n      <div>\n        <RepoIcon className={[styles[\"svg\"], styles[\"mr-2\"]].join(\" \")} />\n        <a\n          className={styles[\"repo-header\"]}\n          target=\"blank\"\n          href={`https://github.com/${user}/${repo}`}\n        >\n          {repo}\n        </a>\n      </div>\n      <p className={[styles[\"mt-2\"], styles[\"mb-3\"]].join(\" \")}>\n        {data.description}\n      </p>\n      <p style={{ fontSize: \"12px\" }}>\n        <span className={styles[\"mr-3\"]}>\n          <span\n            className={styles[\"lang-color\"]}\n            style={{ backgroundColor: colors[data.language] }}\n          ></span>{\" \"}\n          {data.language}\n        </span>\n        {data.stargazers_count > 0 ? (\n          <a\n            className={styles[\"github-icon\"]}\n            target=\"blank\"\n            href={`https://github.com/${user}/${repo}/stargazers`}\n          >\n            <StarIcon className={styles[\"svg\"]} /> {data.stargazers_count}\n          </a>\n        ) : null}\n        {data.forks_count > 0 ? (\n          <a\n            className={[\n              styles[\"github-icon\"],\n              data.stargazers_count > 0 ? styles[\"ml-3\"] : \"\",\n            ].join(\" \")}\n            target=\"blank\"\n            href={`https://github.com/${user}/${repo}/network`}\n          >\n            <ForkIcon className={styles[\"svg\"]} /> {data.forks_count}\n          </a>\n        ) : null}\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport RepoCards from \"react-gh-repo-cards\";\nimport \"react-gh-repo-cards/dist/index.css\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport vsDark from \"prism-react-renderer/themes/vsDark\";\n\nconst CodeComponent = ({ code, theme, language }) => {\n  return (\n    <Highlight {...defaultProps} theme={theme} code={code} language={language}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={className}\n          style={{\n            ...style,\n            fontSize: \"19px\",\n            padding: \"0.7rem\",\n            fontFamily: \"'Fira Code', monospace\",\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n\nconst App = () => {\n  const code = `import RepoCards from \"react-gh-repo-cards\";\nimport \"react-gh-repo-cards/dist/index.css\";\n\nconst Cards = () => {\n  return (\n    <RepoCards\n      user=\"CITIZENDOT\"\n      repos={[\"Leetcode-Visualizer\", \"gh-info\", \"TestCode\", \"VCPicker\"]}\n    />\n  );\n};\n\nexport default Cards;`;\n\n  const installation = `npm install react-gh-repo-cards # npm\nyarn add react-gh-repo-cards # yarn`;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"16px\",\n        boxSizing: \"border-box\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <h1 className=\"text-center\">\n        react-gh-repo-cards{\" \"}\n        <sub>\n          <small>Demo</small>\n        </sub>\n      </h1>\n      <RepoCards\n        user=\"CITIZENDOT\"\n        repos={[\"Leetcode-Visualizer\", \"gh-info\", \"TestCode\", \"VCPicker\"]}\n      />\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n          boxSizing: \"border-box\",\n        }}\n      >\n        <h2 className=\"text-center\">Usage</h2>\n        <CodeComponent code={code} theme={vsDark} language=\"jsx\" />\n      </div>\n      <div>\n        <h2 className=\"text-center\">Installation</h2>\n        <CodeComponent code={installation} theme={vsDark} language=\"bash\" />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}